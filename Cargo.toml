[package]
name = "opaque-wasm"
description = "Secure client-server authentication using the OPAQUE protocol, without the server ever learning the password."
version = "0.0.0"
authors = ["Peter Bartha <peterbartha@pm.me>"]
license = "MIT"
edition = "2018"

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["console_error_panic_hook"]

[dependencies]
argon2 = "0.5.3"
base64 = "0.22.1"
# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.7", optional = true }
generic-array = "0.14.7"
getrandom = { version = "0.3.3", features = ["js", "wasm-bindgen"] }
opaque-ke = "3"
rand = "0.8.5"
serde = { version = "1.0.219", features = ["derive"] }
serde-wasm-bindgen = "0.6.5"
tsify = { version = "0.5.5", features = ["js"] }
wasm-bindgen = { version = "0.2.100", features = ["serde-serialize"] }

[dev-dependencies]
wasm-bindgen-test = "0.3.34"

[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = "s"
